{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tracker of Water",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Tracker of Water app"
  },
  "servers": [
    {
      "url": "https://dark-side-of-the-app01.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations with user."
    },
    {
      "name": "Users",
      "description": "Operations with User`s info."
    },
    {
      "name": "Water",
      "description": "Operations with information about water consumption."
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user to the app",
        "operationId": "signup",
        "description": "Register user to the app Tracker of Water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email",
                    "example": "yuliyashylina@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User's password",
                    "example": 12345678
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "User's name",
                          "example": "user"
                        },
                        "dailyNorm": {
                          "type": "number",
                          "description": "User's daily norm of water",
                          "example": 1800
                        },
                        "dailyWaterIntake": {
                          "type": "number",
                          "description": "User's daily water intake",
                          "example": 500
                        },
                        "gender": {
                          "type": "string",
                          "description": "User's gender",
                          "example": "Woman"
                        },
                        "email": {
                          "type": "string",
                          "description": "User's email",
                          "example": "street@mail.com"
                        },
                        "photo": {
                          "type": "string",
                          "description": "User's photo",
                          "example": ""
                        },
                        "_id": {
                          "type": "string",
                          "description": "User's ID",
                          "example": "671a9983a4d996aa0ceb1815"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Document creation time",
                          "example": "2024-10-24T19:01:24.049Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Document update time",
                          "example": "2024-10-24T19:01:24.049Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login to the app",
        "operationId": "signin",
        "description": "Login to the app Tracker of Water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email",
                    "example": "yuliyashylina@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User's password",
                    "example": 12345678
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signin successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Signin successful!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "icEbFX95To8Nggtz1sc8QYVKcCZ47IfiHhx1QMK4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User signout",
        "operationId": "signout",
        "description": "User signout from the app Tracker of Water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful signout"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh the authentication token",
        "operationId": "refreshToken",
        "description": "Refresh the authentication token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "yKJRYGuruk+EUYeXJyU/+SUMfICpe0NT/say3guZ"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user's info",
        "description": "Get information about a user",
        "operationId": "get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found a user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user info",
        "operationId": "patch",
        "description": "Update user info. Only include fields in the request body that you want to change.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "Yuliya Shylina"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "yuliyashylina@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "12345678"
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "example": "Woman"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User info updated successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User info updated successfully!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/photo": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update user photo",
        "description": "Update user photo",
        "operationId": "photo",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Photo has been added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Photo has been added successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": "https://res.cloudinary.com/dw85wbzsg/image/upload/v1729423562/wvbc95awdglynpkomie9.jpg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/norm": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user`s dailyNorm",
        "operationId": "patchNorm",
        "description": "Update user`s dailyNorm",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dailyNorm": {
                    "description": "User's dailyNorm",
                    "type": "string",
                    "example": 1900
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User info updated successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User info updated successfully!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "dailyNorm": {
                          "type": "number",
                          "description": "User's daily norm of water",
                          "example": 1900
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/{id}": {
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete an entry",
        "operationId": "deleteWaterEntry",
        "description": "Delete a water entry by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6714324a13969c9151f9123b"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The entry was deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update an entry",
        "operationId": "updateEntry",
        "description": "Update a water entry by id with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6714324a13969c9151f9123b"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "description": "Date and time of water intake",
                    "type": "string",
                    "example": "2024-10-18T10:20"
                  },
                  "volume": {
                    "description": "The volume of water in ml",
                    "type": "number",
                    "minimum": 1,
                    "maximum": 5000,
                    "example": 250
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The entry was updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfuly updated en entry!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/day": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get a list of entries by day",
        "operationId": "getWaterByDay",
        "description": "Get a list of entries for a specific day with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "example": "2024-10-18"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully loaded water enteries per day",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully loaded water per day!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalWaterPerDay": {
                          "type": "number",
                          "description": "The sum of all water consumed per day",
                          "example": 2000
                        },
                        "percentPerDay": {
                          "type": "number",
                          "description": "Fulfillment of the daily norm in percents",
                          "example": 60
                        },
                        "servings": {
                          "type": "number",
                          "description": "The number of servings of water per day",
                          "example": 5
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/water"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get a list of entries by month",
        "operationId": "getWaterByMonth",
        "description": "Get a list of entries for a specific month with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "example": "2024-10"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully loaded water enteries per month",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully loaded water per month!"
                    },
                    "waterData": {
                      "type": "object",
                      "properties": {
                        "dailyNorm": {
                          "type": "number",
                          "description": "Daily water norm for a specific user in ml",
                          "minimum": 1,
                          "maximum": 5000,
                          "example": 1800
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "_id",
                              "totalVolume",
                              "servings",
                              "percent"
                            ],
                            "properties": {
                              "_id": {
                                "type": "string",
                                "format": "date",
                                "example": "2024-10-18"
                              },
                              "totalVolume": {
                                "type": "number",
                                "description": "The sum of all water consumed per day",
                                "example": 2000
                              },
                              "servings": {
                                "type": "number",
                                "description": "The number of servings of water per day",
                                "example": 5
                              },
                              "percent": {
                                "type": "number",
                                "description": "Fulfillment of the daily norm in percents",
                                "example": 100
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add an entry about water",
        "operationId": "addWater",
        "description": "Add an entry about water intake with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "volume"
                ],
                "properties": {
                  "date": {
                    "description": "Date and time of water intake",
                    "type": "string",
                    "example": "2024-10-18T10:20"
                  },
                  "volume": {
                    "description": "The volume of water in ml",
                    "type": "number",
                    "minimum": 1,
                    "maximum": 5000,
                    "example": 250
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an entry",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created an entry!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "New password cannot be the same as the old password",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "New password cannot be the same as the old password"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email already exists",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "671a9983a4d996aa0ceb1815"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "Yuliya Shylina"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "yuliyashylina@gmail.com"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "example": "Woman"
          },
          "dailyNorm": {
            "type": "number",
            "description": "User's daily norm of water in ml",
            "example": 1800
          },
          "photo": {
            "description": "User's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/dw85wbzsg/image/upload/v1729423562/wvbc95awdglynpkomie9.jpg"
          },
          "createdAt": {
            "description": "Document creation time",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-24T19:01:24.049Z"
          },
          "updatedAt": {
            "description": "Document update time",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-24T19:01:24.049Z"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "date",
          "volume",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Entry id",
            "type": "string",
            "example": "6714324a13969c9151f9123b"
          },
          "date": {
            "type": "string",
            "format": "YYYY-MM-DDTHH:MM",
            "description": "Date and time in the format YYYY-MM-DDTHH:MM. Time is in the 24-hour notation",
            "example": "2024-10-18T14:20"
          },
          "volume": {
            "type": "number",
            "description": "The volume of water intake in ml",
            "minimum": 1,
            "maximum": 5000,
            "example": 250
          },
          "userId": {
            "description": "User id",
            "type": "string",
            "example": "66f82f51f334d8291ef790e7"
          }
        }
      }
    }
  }
}