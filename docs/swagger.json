{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tracker of Water",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Tracker of Water app"
  },
  "servers": [
    {
      "url": "https://nodejs-hw-mongodb-5-u8mz.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations with user."
    },
    {
      "name": "Users",
      "description": "Operations with User`s info."
    },
    {
      "name": "Water",
      "description": "Operations with information about water consumption."
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user to the app",
        "operationId": "userSignup",
        "description": "Register user to the app Tracker of Water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email",
                    "example": "yuliyashylina@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User's password",
                    "example": 12345678
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register user successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Register user successful!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/user"
                        },
                        "accessToken": {
                          "type": "string",
                          "example": "icEbFX95To8Nggtz1sc8QYVKcCZ47IfiHhx1QMK4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login to the app",
        "operationId": "userSignin",
        "description": "Login to the app Tracker of Water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email",
                    "example": "yuliyashylina@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User's password",
                    "example": 12345678
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signin successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Signin successful!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/user"
                        },
                        "accessToken": {
                          "type": "string",
                          "example": "icEbFX95To8Nggtz1sc8QYVKcCZ47IfiHhx1QMK4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User signout",
        "operationId": "userSignout",
        "description": "User signout from the app Tracker of Water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful signout"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh the authentication token",
        "operationId": "refreshToken",
        "description": "Refresh the authentication token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "yKJRYGuruk+EUYeXJyU/+SUMfICpe0NT/say3guZ"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user info by ID",
        "operationId": "patchUser",
        "description": "Update user info by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to update",
            "example": "60d21b4667d0d8992e610c85"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "Yuliya Shylina"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "yuliyashylina@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "12345678"
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "example": "Woman"
                  },
                  "dailyWaterIntake": {
                    "type": "number",
                    "description": "User's daily rate of water",
                    "example": 1900
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User info updated successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User info updated successfully!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user's info",
        "description": "Get information about user",
        "operationId": "getUserInfo",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "User's ID",
                              "example": "6714db356469cbb50dea4595"
                            },
                            "name": {
                              "type": "string",
                              "description": "User's full name",
                              "example": "Yuliya Shylina"
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "description": "User's email address",
                              "example": "yuliyashylina@gmail.com"
                            },
                            "gender": {
                              "type": "string",
                              "description": "User's gender",
                              "example": "Woman"
                            },
                            "dailyNorm": {
                              "type": "number",
                              "description": "User's daily norm of water",
                              "default": 2000
                            },
                            "dailyWaterIntake": {
                              "type": "number",
                              "description": "User's daily rate of water",
                              "default": 2000
                            },
                            "photo": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL of the user's photo photo",
                              "example": "https://res.cloudinary.com/dw85wbzsg/image/upload/v1729423562/wvbc95awdglynpkomie9.jpg"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/photo": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update user photo",
        "description": "Update user photo",
        "operationId": "addUserPhoto",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User`s photo updated successfully",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User`s photo updated successfully!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "6714db356469cbb50dea4595"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "Yuliya Shylina"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "yuliyashylina@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "12345678"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "default": "female",
            "example": "female"
          },
          "dailyWaterIntake": {
            "type": "number",
            "description": "User's daily rate of water",
            "default": 1800
          },
          "dailyNorm": {
            "type": "number",
            "description": "User's daily norm of water",
            "default": 1800
          },
          "photo": {
            "description": "User's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/dw85wbzsg/image/upload/v1729423562/wvbc95awdglynpkomie9.jpg"
          },
          "createdAt": {
            "description": "Document creation time",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-19T12:13:27.086Z"
          },
          "updatedAt": {
            "description": "Document update time",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-20T09:47:22.339Z"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "New password cannot be the same as the old password",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "New password cannot be the same as the old password"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email already exists",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  }
}